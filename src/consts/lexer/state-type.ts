export enum StateType {
  START,

  NEWLINE,
  NEWLINE_END,

  SKIPPABLE,
  SKIPPABLE_END,

  COMMENT,
  COMMENT_CONTENT,
  COMMENT_END,

  LESS_THAN_ARITHMETIC_OPERATOR,
  LESS_THAN_OR_EQUAL_ARITHMETIC_OPERATOR,

  GREATER_THAN_ARITHMETIC_OPERATOR,
  GREATER_THAN_OR_EQUAL_ARITHMETIC_OPERATOR,

  NOT_EQUAL_ARITHMETIC_OPERATOR,

  ARITHMETIC_OPERATOR_END,

  ASSIGNMENT_OPERATOR_BEGIN,
  ASSIGNMENT_OPERATOR,
  ASSIGNMENT_OPERATOR_END,

  OPEN_PARENTHESIS,
  OPEN_PARENTHESIS_END,
  CLOSE_PARENTHESIS,
  CLOSE_PARENTHESIS_END,

  ESCAPED_CHAR,
  ESCAPED_CHAR_LAST_BRACKET,
  ESCAPED_CHAR_END,

  SINGLE_QUOTE,
  SINGLE_QUOTE_LAST_QUOTE,
  SINGLE_QUOTE_END,

  DOUBLE_QUOTE,
  DOUBLE_QUOTE_LAST_QUOTE,
  DOUBLE_QUOTE_END,

  BOOLEAN,
  BOOLEAN_END,

  COMMA,
  COMMA_END,

  CARRIAGE_RETURN,
  CARRIAGE_RETURN_END,

  AMPERSAND,
  AMPERSAND_END,

  COLON,
  COLON_END,

  ALPHABETIC,
  ALPHABETIC_END,

  DIGIT_WHOLE,
  DIGIT_AFTER_E,
  DIGIT_DECIMAL,
  DIGIT_END,
}

export const END_STATES = new Set([
  StateType.SKIPPABLE_END,
  StateType.NEWLINE_END,
  StateType.COMMENT_END,
  StateType.ARITHMETIC_OPERATOR_END,
  StateType.ASSIGNMENT_OPERATOR_END,
  StateType.DIGIT_END,
  StateType.ALPHABETIC_END,
  StateType.AMPERSAND_END,
  StateType.COMMA_END,
  StateType.SINGLE_QUOTE_END,
  StateType.DOUBLE_QUOTE_END,
  StateType.CARRIAGE_RETURN_END,
  StateType.COLON_END,
  StateType.OPEN_PARENTHESIS_END,
  StateType.CLOSE_PARENTHESIS_END,
  StateType.ESCAPED_CHAR_END,
]);
